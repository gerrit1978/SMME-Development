<?php

/**
 * @file
 * This module provides a number of custom blocks
 *
 * - header block for subject (taxonomy) page
 * - inline navigation block for subject (taxonomy) page
 * - roadmap block for subject (taxonomy) page (divided according to subject divisions vocabulary)
 * - header block for course (node) page
 * - roadmap "product variations" (public dates) for course (node) page
 * - testimonial block for course (node) page
 * - header block for team (node) page
 * - testimonial block for trainer (node) page
 * - inline navigation block for book a course page
 * - inline navigation block for course (node) page
 * - generic title block which only contains the page title
 * - header block for landing pages
 * - testimonials for landing pages (based on course node)
 *
 */

/**
 * Implements hook_block_init
 */
function hc_blocks_init() {
  $path = drupal_get_path('module', 'hc_blocks');
  drupal_add_css($path . '/hc_blocks.css');
}

/**
 * Implements hook_block_info
 */
function hc_blocks_block_info() {
  $blocks = array();
  
  $blocks['catalog_subject_header'] = array(
    'info' => t('Catalog Subject Page Header'),
  );
  
  $blocks['catalog_subject_navigation'] = array(
    'info' => t('Catalog Subject Page Navigation'),
  );
  
  $blocks['catalog_subject_course_roadmap'] = array(
    'info' => t('Catalog Subject Page Course Roadmap'),
  );
  
  $blocks['course_header'] = array(
    'info' => t('Course Page Header'),
  );
  
  $blocks['course_public_dates'] = array(
    'info' => t('Course Public Dates'),
  );
  
  $blocks['course_testimonials'] = array(
    'info' => t('Course Testimonials'),
  );
  
  $blocks['team_header'] = array(
    'info' => t('Team Page Header'),
  );
  
  $blocks['trainer_testimonials'] = array(
    'info' => t('Trainer Testimonials'),
  );
  
  $blocks['book_a_course_navigation'] = array(
    'info' => t('Book a Course Page Navigation'),
  );
  
  $blocks['course_node_navigation'] = array(
    'info' => t('Course Detail Page Navigation'),
  );
  
  $blocks['page_title'] = array(
    'info' => t('Page Title'),
  );
  
  $blocks['landing_page_header'] = array(
    'info' => t('Landing Page Header'),
  );
  
  $blocks['landing_page_testimonials'] = array(
    'info' => t('Landing Page Testimonials'),
  );

  
  return $blocks;
}

/**
 * Implements hook_block_view
 */
function hc_blocks_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'catalog_subject_header':
      $block['content'] = _hc_blocks_block_catalog_subject_header_render();
      break;
    case 'catalog_subject_navigation':
      $block['subject'] = t('Navigation');
      $block['content'] = _hc_blocks_block_catalog_subject_navigation_render();
      break;
    case 'catalog_subject_course_roadmap':
      $block['subject'] = _hc_blocks_block_catalog_subject_course_roadmap_render_title();
      $block['content'] = _hc_blocks_block_catalog_subject_course_roadmap_render();
      break;
    case 'course_header':
      $block['content'] = _hc_blocks_block_course_header_render();
      break;
    case 'course_public_dates':
/*       $block['subject'] = _hc_blocks_block_course_public_dates_render_title(); */
      $block['title'] = t('Where can I book it?');
      $block['content'] = _hc_blocks_block_course_public_dates_render();
      break;
    case 'course_testimonials':
      $block['subject'] = t('Course Testimonials');
      $block['content'] = _hc_blocks_block_course_testimonials_render();
      break;
    case 'team_header':
      $block['content'] = _hc_blocks_block_team_header_render();
      break;
    case 'trainer_testimonials':
      $block['subject'] = t('Trainer Testimonials');
      $block['content'] = _hc_blocks_block_trainer_testimonials_render();
      break;
    case 'book_a_course_navigation':
      $block['subject'] = t('Navigation');
      $block['content'] = _hc_blocks_block_book_a_course_navigation_render();
      break;
    case 'course_node_navigation':
      $block['subject'] = t('Navigation');
      $block['content'] = _hc_blocks_block_course_node_navigation_render();
      break;      
    case 'page_title':
      $block['content'] = _hc_blocks_block_page_title_render();
      break;
    case 'landing_page_header':
      $block['content'] = _hc_blocks_block_landing_page_header_render();
      break;
    case 'landing_page_testimonials':
      $block['content'] = _hc_blocks_block_landing_page_testimonials_render();
  }
  
  return $block;
}

/**
 * Helper function for rendering Catalog subject page header block
 */
function _hc_blocks_block_catalog_subject_header_render() {
  $block = array();
  
  if (is_numeric(arg(2))) {
    $tid = arg(2);
    $term_wrapper = entity_metadata_wrapper('taxonomy_term', $tid);
    $term_name = $term_wrapper->name->value();
    $term_description = $term_wrapper->description->value();
    $term_header_visual = $term_wrapper->field_catalog_header_visual->value();
    $header_visual_path = image_style_url('subject_header_default', $term_header_visual['uri']);
//    $header_visual_path = file_create_url($term_header_visual['uri']);
    $header_visual = theme('image', array('path' => $header_visual_path));

		$output = "<div class='image'>" . $header_visual . "</div>"
		  . "<div class='text'>"
		  . "<div class='title'>" . $term_name . "</div>"
		  . "<div class='description'>" . $term_description . "</div>"
		  . "</div>";

  } 
  
  $block['#markup'] = $output;
  
  return $block;
}


/**
 * Helper function for rendering Catalog subject page navigation block
 */
function _hc_blocks_block_catalog_subject_navigation_render() {
  $block = array();
  
  if (is_numeric(arg(2))) {
    $tid = arg(2);
    $term_wrapper = entity_metadata_wrapper('taxonomy_term', $tid);
    $term_name = $term_wrapper->name->value();
    $field_block = $term_wrapper->field_block->value();

    if (is_array($field_block)) {
      $items = array();
      $items[] = array('data' => '<p class="title">' . t('Have questions?<br />Click for an answer.') . '</p>');
      
      foreach ($field_block as $block_item) {
        $field_block_wrapper = entity_metadata_wrapper('field_collection_item', $block_item->item_id);
        $title = $field_block_wrapper->field_block_title->value();
        $items[] = array('data' => "<a href='#'>" . $title . "</a>", 'data-naventityid' => $block_item->item_id);
      }
      
      $items[] = array('data' => "<a href='#'>" . t('What is the @term_name course roadmap?', array('@term_name' => $term_name)) . "</a>");
    }

  } 
  $block['#markup'] = theme('item_list', array('items' => $items));
  
  return $block;
}

/**
 * Helper function for rendering Catalog subject page course roadmap title
 */
function _hc_blocks_block_catalog_subject_course_roadmap_render_title() {
  
  $title = "";
  if (is_numeric(arg(2))) {
    $tid = arg(2);
    $term_wrapper = entity_metadata_wrapper("taxonomy_term", $tid);
    $term_name = $term_wrapper->name->value();
    $title = t('What is the @title course roadmap?', array('@title' => $term_name));
  }
  
  return $title;
}

/**
 * Helper function for rendering Catalog subject page course roadmap
 */
function _hc_blocks_block_catalog_subject_course_roadmap_render() {
  $block = array();
  $subject_divisions = array();
  $items = array();
  
  if (is_numeric(arg(2))) {
    $tid = arg(2);
  }
  
  $result = db_query("SELECT * FROM {field_data_field_subject} s, {field_data_field_global_order} o WHERE s.field_subject_tid=:tid 
                      AND s.entity_id = o.entity_id AND o.bundle = 'subject_divisions' ORDER BY o.field_global_order_value ASC;", 
            array(':tid' => $tid));
  foreach ($result as $row) {
    // region check here
    $current_location = $_SESSION['user_location']['continent_code'];
    $subject_division_wrapper = entity_metadata_wrapper('taxonomy_term', $row->entity_id);
    $region_field = $subject_division_wrapper->field_global_region->value();
    if (in_array($current_location, $region_field)) {
      $subject_divisions[] = $row->entity_id; 
    }
  }
    

  
  // for subjects containing divisions
  if (count($subject_divisions)) {
	  foreach ($subject_divisions as $division_tid) {
	    $output_courses = "";
	    $items_course_nids = array();
	    // get basic info for this division
	    $division_term = entity_metadata_wrapper('taxonomy_term', $division_tid);
	    $division_title = $division_term->name->value();
	    $division_description = $division_term->description->value();
	    
	    // get courses belonging to this division
	    $result = db_query("SELECT * FROM {field_data_field_course_training_division} d, {field_data_field_global_order} o WHERE d.field_course_training_division_tid=:tid
	                        AND d.entity_id = o.entity_id ORDER BY o.field_global_order_value ASC;",
	              array(':tid' => $division_tid));
	              
	    // do region check
	    $current_location = $_SESSION['user_location']['continent_code'];
	    foreach ($result as $row) {
	      $entity_id = $row->entity_id;
	      
	      $course_wrapper = entity_metadata_wrapper('node', $entity_id);
	      $region_field = $course_wrapper->field_global_region->value();
	      if (in_array($current_location, $region_field)) {
		      $items_course_nids[] = $entity_id;      
	      }
	    }
	    
	    $output_courses = views_embed_view('courses_per_subject', 'block_1', implode(',', $items_course_nids));
	    
	    if (count($items_course_nids)) {
		    $items[] = array('data' => "<div class='division'><h3>" . $division_title . "</h3><div class='division-description'>" . $division_description . "</div></div>" . $output_courses,
	                     'class' => array('subject-division', 'clearfix'));
	    }
	  }
	} else {
	  // subjects containing no divisions
	  $output_courses = "";
	  $items_course_nids = array();
	  // get basic info for this subject
    $subject_wrapper = entity_metadata_wrapper('taxonomy_term', $tid);
    $subject_name = $subject_wrapper->name->value();
    $subject_description = $subject_wrapper->description->value();
    
    $result = db_query("SELECT DISTINCT * FROM {node} n, {field_data_field_course_catalog_subject} s, {field_data_field_global_order} o
      WHERE n.nid = o.entity_id
      AND n.type = 'course'
      AND n.nid = s.entity_id
      AND s.field_course_catalog_subject_tid=:subject_tid
      ORDER BY o.field_global_order_value ASC;",
      array(':subject_tid' => $tid));

    foreach ($result as $row) {
      $course_nid = $row->nid;
      $course_wrapper = entity_metadata_wrapper('node', $course_nid);
      $region_field = $course_wrapper->field_global_region->value();
      $current_location = $_SESSION['user_location']['continent_code'];
      if (in_array($current_location, $region_field)) {
        $items_course_nids[] = $course_nid;
      }
    }

    $output_courses = views_embed_view('courses_per_subject', 'block_1', implode(',', $items_course_nids));
	    
    if (count($items_course_nids)) {
		    $items[] = array('data' => "<div class='division'><h3>" . $subject_name . "</h3><div class='division-description'>" . $subject_description . "</div></div>" . $output_courses,
	                     'class' => array('subject-division', 'clearfix'));
    }
   
	}
  
  $block['#markup'] = theme('item_list', array('items' => $items, 'attributes' => array('class' => 'subject-divisions clearfix'))) . '<a class="to-top to-top-block" href="#">Top&nbsp;<i class="icon-arrow-up"></i></a>';
  
  return $block;
}


/**
 * Helper function for rendering Course Page header block
 */
function _hc_blocks_block_course_header_render() {
  $block = array();
  
  if (is_numeric(arg(1))) {
    $nid = arg(1);
    $node_wrapper = entity_metadata_wrapper('node', $nid);
    
    // get subject name
    $subject = $node_wrapper->field_course_catalog_subject->value();
    $subject_name = $subject->name;    

    $course_header_field = $node_wrapper->field_course_header->value();
    if ($course_header_field) {
	    $course_header_wrapper = entity_metadata_wrapper('field_collection_item', $course_header_field->item_id);
	    
	    // title & text
	    $course_header_title = $course_header_wrapper->field_course_header_title->value();
	    $course_header_text = $course_header_wrapper->field_course_header_text->value();
	    $course_header_text_formatted = $course_header_text['safe_value'];
	    
	    // visual
	    $course_header_visual = $course_header_wrapper->field_course_header_visual->value();
	    $course_header_visual_path = image_style_url('course_node_header_default', $course_header_visual['uri']);
	    $course_header_visual_image = theme('image', array('path' => $course_header_visual_path));
	    
	    // key information

	    $key_information = array();
	    $course_header_blocks = $course_header_wrapper->field_course_header_blocks->value();
	    
	    if (is_array($course_header_blocks)) {
  	    foreach ($course_header_blocks as $course_header_block) {
          $course_header_block_id = $course_header_block->item_id;
          $course_header_block_wrapper = entity_metadata_wrapper('field_collection_item', $course_header_block_id);
          $course_header_output = "";
          // check for type: text or price
          $course_header_block_type = $course_header_block_wrapper->field_course_header_block_type->value();
          if (empty($course_header_block_type) || $course_header_block_type == 'text') {
	          $course_header_block_label = $course_header_block_wrapper->field_course_header_block_label->value();
	          $course_header_block_value = $course_header_block_wrapper->field_course_header_block_value->value(); 
	          $course_header_output = "<div class='main'>" . $course_header_block_value . "</div><div class='small'>" . $course_header_block_label . "</div>";
          } 
          if ($course_header_block_type == 'price') {
          
            // get price type
            $course_header_block_price_type = $course_header_block_wrapper->field_course_header_block_pr_typ->value();
            $small = "";
            switch ($course_header_block_price_type) {
              case 'attendee':
                $label = 'Attendee Price';
                break;
              case 'session':
                $label = 'Session Price';
                break;
            }
            $small = "<div class='small'>" . $label . "</div>";
            
            // get region-based price
			      $path = drupal_get_path('module', 'commerce_extra_price_formatters');
			      require_once($path . "/includes/extra_functions.inc");

            $user_location = $_SESSION['user_location'];
            switch ($user_location['continent_code']) {
              case 'EU':
                $price_field = "field_course_header_block_pr_eu";
                $currency_code = "EUR";
                break;
              case 'NA':
              default:
                $price_field = "field_course_header_block_pr_usa";
                $currency_code = "USD";
                break;
              case 'AS':
                $price_field = "field_course_header_block_pr_as";
                $currency_code = "USD";                
                break;
            }
            $course_price = $course_header_block_wrapper->$price_field->value() * 100;
            $course_price_formatted = commerce_extra_price_no_decimal_currency_format($course_price, $currency_code);
            
            $large = "<div class='main'>" . $course_price_formatted . "</div>";

            $course_header_output = $large . $small;
          }
          
          $key_information[] = $course_header_output;
  	    }
	    }

      $key_information_output = theme('item_list', array('items' => $key_information, 'attributes' => array('class' => 'clearfix')));	    
	    
	    $output = "<div class='image'>" . $course_header_visual_image . "</div>"
	      . "<div class='text'>"
	      . "<div class='title'>" . $course_header_title . "</div>"
	      . "<div class='description'>" . $course_header_text_formatted . "</div>"
	      . "<div class='key-information'>" . $key_information_output . "</div>"
	      . "</div>";
    } else {
      $output = "NO HEADER AVAILABLE";
    }

    $block['#markup'] = $output;

  }
  return $block;
}

/**
 * Helper function for rendering public course dates block title 
 */
function _hc_blocks_block_course_public_dates_render_title() {

  $title = "Public Course Dates";

  if (arg(0) == 'node' && is_numeric(arg(1))) {
    $nid = arg(1);
    $node = node_load($nid);
    $node_title = $node->title;
    $title = t('Public Course Dates for @title', array('@title' => $node_title));
  }

  return $title;
}


/**
 * Helper function for rendering public course dates block
 */
function _hc_blocks_block_course_public_dates_render() {

  $output = "";

  if (arg(0) == 'node' && is_numeric(arg(1))) {
    $nid = arg(1);
    $node_wrapper = entity_metadata_wrapper('node', $nid);
    $node_title = $node_wrapper->title->value();
    $public_course_field = $node_wrapper->field_course_public_courses->value();
    if (is_array($public_course_field) && count($public_course_field)) {
      $product_pids = array();
      foreach ($public_course_field as $public_course) {
        $product_id = $public_course->product_id;
        $variation_wrapper = entity_metadata_wrapper('commerce_product', $product_id);
        if ($variation_wrapper->status->value() == 1) {
	        if (_hc_regions_check_product_variation($product_id)) {
	          $product_pids[] = $public_course->product_id;        
	        }
	      }
      }
      
      if (count($product_pids)) {
        $output .= "<div class='header clearfix'><div class='left'>Course</div><div class='center'>" . t('Upcoming Dates') . "</div><div class='right1'>Price</div><div class='right2'>Book</div></div>";
        $output .= "<div class='title clearfix'><div class='title-inner'>" . $node_title . "</div></div>";
      
/*         $output .= views_embed_view('public_courses_temp', 'block', implode(',', $product_pids)); */
        $output .= views_embed_view('public_courses', 'block', implode(',', $product_pids));
      } 
    } else { 
        $output .= "<div class='header clearfix'><div class='left'>Course</div><div class='center'>" . t('Upcoming Dates') . "</div><div class='right'>Book</div></div>";
        $output .= "<div class='title clearfix'><div class='title-inner'>" . $node_title . "</div></div>";

        // output: only choose your own
        $current_path = current_path();
          $link = '<a rel="width:500;resizable:false;position:[center,60]" class="simple-dialog" name="block-system-main" href="/book-this-course?nid=' . $nid . '&redirect=' . $current_path . '"><i class="icon-ok"></i>&nbsp;Book This Course</a>';

        
        $output .= "<div class='view-public-courses'><ul class='public-courses'>"
          . "<li class='public-course views-row-last'>"
          . "<span class='course-row'>"
          . "<span class='location'>" . t('Onsite') . "</span><span class='date'>" . t('Choose Your Own') . "</span>"
          . "</span>"
          . "<span class='book'>" . $link . "</span>"
          . "</li>"
          . "</ul></div>";
        
    }
    
    $output .= '<a class="to-top to-top-block" href="#">Top&nbsp;<i class="icon-arrow-up"></i></a>';
    
    return $output;    
  } else {
    return;
  }
}


/**
 * Helper function for rendering Course Testimonials block
 */
function _hc_blocks_block_course_testimonials_render() {

  if (is_numeric(arg(1))) {
    $testimonial_nids = array();
    $nid = arg(1);
    $result = db_query("SELECT entity_id FROM {field_revision_field_testimonial_course_ref} WHERE field_testimonial_course_ref_nid=:course_nid", array(':course_nid' => $nid));
    foreach ($result as $row) {
      $testimonial_nids[] = $row->entity_id;
    }
  }

  $output = views_embed_view('testimonials', 'block', implode(',', $testimonial_nids));

  return $output;
}


/**
 * Helper function for rendering Team Page Header block
 */
function _hc_blocks_block_team_header_render() {
  $block = array();
  
  if (is_numeric(arg(1))) {
    $nid = arg(1);
    $node_wrapper = entity_metadata_wrapper('node', $nid);
    $team_header_field = $node_wrapper->field_team_header->value();
    if ($team_header_field) {
	    $team_header_wrapper = entity_metadata_wrapper('field_collection_item', $team_header_field->item_id);
	    
	    $team_header_title = $team_header_wrapper->field_team_header_title->value();
	    $team_header_text = $team_header_wrapper->field_team_header_text->value();
	    
	    $team_header_visual = $team_header_wrapper->field_team_header_visual->value();
      $team_header_visual_path = image_style_url('subject_header_default', $team_header_visual['uri']);
	    
//	    $team_header_visual_path = file_create_url($team_header_visual['uri']);
	    $team_header_visual_image = theme('image', array('path' => $team_header_visual_path));
	    
	    $output = "<div class='image'>" . $team_header_visual_image . "</div>"
	      . "<div class='text'>"
	      . "<div class='title'>" . $team_header_title . "</div>"
	      . "<div class='description'>" . $team_header_text . "</div>"
	      . "</div>";
    } else {
      $output = "NO HEADER AVAILABLE";
    }

    $block['#markup'] = $output;

  }
  return $block;
}


/**
 * Helper function for rendering Trainer Testimonials block
 */
function _hc_blocks_block_trainer_testimonials_render() {

  if (is_numeric(arg(1))) {
    $testimonial_nids = array();
    $nid = arg(1);
    $result = db_query("SELECT entity_id FROM {field_revision_field_testimonial_team_ref} WHERE field_testimonial_team_ref_nid=:trainer_nid", array(':trainer_nid' => $nid));
    foreach ($result as $row) {
      $testimonial_nids[] = $row->entity_id;
    }
  }

  $output = views_embed_view('testimonials', 'block', implode(',', $testimonial_nids));

  return $output;
}


/**
 * Helper function for rendering book a course page navigation
 */
function _hc_blocks_block_book_a_course_navigation_render() {

  $catalog = taxonomy_get_tree(3);
  
  // get user_location
  $continent_code = $_SESSION['user_location']['continent_code'];
  
  if (is_array($catalog) && count($catalog) > 0) {
    $items = array();
    $items[] = array('data' => '<p class="title">' . t('Which courses<br />are you looking for?') . '</p>');

    foreach ($catalog as $subject) {
      $subject_wrapper = entity_metadata_wrapper('taxonomy_term', $subject->tid);
      $subject_title = $subject_wrapper->name->value();
      $subject_tid = $subject->tid;
      $subject_region = $subject_wrapper->field_global_region->value();
      if (is_array($subject_region)) {
        foreach ($subject_region as $region) {
          if ($region == $continent_code) {
            $items[] = array('data' => "<a href='#'>" . $subject_title . "</a>", 'data-naventityid' => $subject_tid);
          }
        }
      }
    }
  }

  $output = theme('item_list', array('items' => $items, 'attributes' => array('class' => array('clearfix'))));
  
  return $output;
}


/**
 * Helper function for rendering course node navigation
 */
function _hc_blocks_block_course_node_navigation_render() {
  
  $block = array();
  
  if (arg(0) == 'node' && is_numeric(arg(1))) {
    $nid = arg(1);
    $node_wrapper = entity_metadata_wrapper('node', $nid);
    $field_block = $node_wrapper->field_block->value();

    if (is_array($field_block)) {
      $items = array();
      $items[] = array('data' => '<p class="title">' . t('Have questions?<br />Click for an answer.') . '</p>');
      
      foreach ($field_block as $block_item) {
        $field_block_wrapper = entity_metadata_wrapper('field_collection_item', $block_item->item_id);
        $title = $field_block_wrapper->field_block_title->value();
        $items[] = array('data' => "<a href='#'>" . $title . "</a>", 'data-naventityid' => $block_item->item_id);
      }

      $items[] = array('data' => "<a href='#'>" . t('Where can I book it?') . "</a>");

    }

  } 
  $block['#markup'] = theme('item_list', array('items' => $items));
  
  return $block;
}


/**
 * Helper function for rendering page title block
 */
function _hc_blocks_block_page_title_render() {

  $page_title = drupal_get_title();
  return $page_title;
}


/**
 * Helper function for rendering landing page header
 */
function _hc_blocks_block_landing_page_header_render() {

  $block = array();
  
  if (is_numeric(arg(1))) {
    $nid = arg(1);
    $node_wrapper = entity_metadata_wrapper('node', $nid);
    
    // get course info
    $course_wrapper = $node_wrapper->field_landing_page_course->value();
    if ($course_wrapper) {
      $course_title = $course_wrapper->title;
    }
    
    // get variation info
    $variation_wrapper = $node_wrapper->field_landing_page_course_varia->value();
    $variation_location_field = field_get_items('commerce_product', $variation_wrapper, 'field_public_course_location');
    $variation_location = $variation_location_field[0]['safe_value'];

    $landing_page_header_field = $node_wrapper->field_landing_page_header->value();
    if ($landing_page_header_field) {
      $landing_page_header_wrapper = entity_metadata_wrapper('field_collection_item', $landing_page_header_field);
      $header_description = $landing_page_header_wrapper->field_land_page_header_desc->value();
      $header_visual = $landing_page_header_wrapper->field_land_page_header_visual->value();
      $header_visual_path = image_style_url('landing_page_header_default', $header_visual['uri']);
      $header_visual_image = theme('image', array('path' => $header_visual_path));
	    
	    $output = "<div class='image'>" . $header_visual_image . "</div>"
	      . "<div class='text'>"
	      . "<h3 class='title'>" . $course_title . "</h3>"
	      . "<div class='location'>" . $variation_location . "</div>"
	      . "<div class='description'>" . $header_description['safe_value'] . "</div>"
	      . "</div>";
    } else {
      $output = "NO HEADER AVAILABLE";
    }

    $block['#markup'] = $output;


  }


  
  return $output;
}


/**
 * Helper function for rendering landing page testimonials
 */
function _hc_blocks_block_landing_page_testimonials_render() {

  if (is_numeric(arg(1))) {
    $landing_page_wrapper = entity_metadata_wrapper('node', arg(1));
    $course_wrapper = $landing_page_wrapper->field_landing_page_course->value();
    $course_nid = $course_wrapper->nid;
    
    $result = db_query("SELECT entity_id FROM {field_revision_field_testimonial_course_ref} WHERE field_testimonial_course_ref_nid=:course_nid", array(':course_nid' => $course_nid));
    foreach ($result as $row) {
      $testimonial_nids[] = $row->entity_id;
    }
  }

  $output = views_embed_view('testimonials', 'block', implode(',', $testimonial_nids));

  return $output;

  
  return $output;
}