<?php

/**
 * Implementation of hook_init
 */
function hc_subscribe_init() {
  $path = drupal_get_path('module', 'hc_subscribe');
  drupal_add_css($path . '/css/hc_subscribe.css');
}

/**
 * Implementation of hook_block_info
 */
function hc_subscribe_block_info() {

	$blocks['hc_subscribe'] = array(
	  'info' => t('Subscribe for newsletter block'),
	);

	return $blocks;

}


/**
 * Implementation of hook_block_view
 */
function hc_subscribe_block_view($delta = '') {
 
  $block = array();

  if ($delta == 'hc_subscribe') {
    $block['subject'] = t('Sign Up');
//    $block['content'] = array();    
    $block['content'] = _hc_subscribe_render_block();
  }
  
  return $block;
}


/**
 * Implementation of hook_menu
 */
function hc_subscribe_menu() {
  $items = array();
  
  $items['admin/settings/subscribe'] = array(
    'title' => 'Subscribe settings',
	'description' => 'API settings for integration with Campaign Monitor',
	'page callback' => 'drupal_get_form',
	'page arguments' => array('hc_subscribe_settings'),
	'access arguments' => array('administer site configuration'),
	'type' => MENU_NORMAL_ITEM,
  );
  
  return $items;
}



/**
 * Helper function to generate block
 */
function _hc_subscribe_render_block() {

  $output = render(drupal_get_form('hc_subscribe'));
	return $output;

}

/**
 * Generate subscription form
 */
function hc_subscribe($form_state) {
	$form = array();

  $form['label'] = array(
    '#markup' => '<div class="label">Sign up for email updates & deals to get 15% off a thing we haz.</div>',
  );

  $form['email'] = array(
		'#type' => 'textfield',
		'#title' => '',
		'#default_value' => 'Email Address',
		'#size' => 60,
  );	
  
  $form['submit'] = array(
    '#type' => 'submit',
	'#value' => t('Subscribe'),
  );
  
  return $form;
}

/**
 * Submit function for subscription form
 */
function hc_subscribe_submit($form, &$form_state) {

  $api_key                = variable_get('campaignmonitor_api_key', '');
  $api_client_id          = variable_get('campaignmonitor_api_client_id', '');
  $api_subscriber_list_id = variable_get('campaignmonitor_api_subscriber_list_id', '');

  include_once(drupal_get_path('module', 'hc_subscribe') . '/lib/csrest_subscribers.php');
  
  $campaign_monitor = new CS_REST_Subscribers($api_subscriber_list_id, $api_key);
  
  $subscriber = array(
    'EmailAddress' => $form_state['values']['email'],
	'Name' => '',
	'CustomFields' => array(),
	'Resubscribe' => TRUE,
  );
  
  $result = $campaign_monitor->add($subscriber);

  if ($result->http_status_code == '201') {
    drupal_set_message(t('Email address successfully added.'));
  } else {
	form_set_error('email', t('Could not subscribe email address. Please try again.')); 
  }
  
}

/**
 * Validation function for subscription form
 */
function hc_subscribe_validate($form, &$form_state) {
  $email = $form_state['values']['email'];
  
  if (!valid_email_address($email)) {
	form_set_error('', t('Please enter a valid email address.'));  
  }
}

/**
 * Generate admin/settings form
 */
function hc_subscribe_settings($form_state) {
  $form['settings'] = array(
    '#type' => 'fieldset',
	'#title' => t('Settings'),
  );	
  
  $form['settings']['api_key'] = array(
    '#type' => 'textfield',
	'#title' => t('API Key'),
	'#default_value' => variable_get('campaignmonitor_api_key', ''),
	'#size' => 60,
  );
  
  $form['settings']['api_client_id'] = array(
    '#type' => 'textfield',
	'#title' => t('API Client Id'),
	'#default_value' => variable_get('campaignmonitor_api_client_id', ''),
	'#size' => 60,
  );
  
  $form['settings']['api_subscriber_list_id'] = array(
    '#type' => 'textfield',
	'#title' => t('API Subscriber List Id'),
	'#default_value' => variable_get('campaignmonitor_api_subscriber_list_id', ''),
  );
  
  $form['settings']['campaignmonitor_from_name'] = array(
    '#type' => 'textfield',
	'#title' => t('Naam afzender Email campagnes'),
	'#default_value' => variable_get('campaignmonitor_from_name', ''),
  );
  
  $form['settings']['campaignmonitor_from_email'] = array(
    '#type' => 'textfield',
	'#title' => t('Emailadres afzender campagnes'),
	'#default_value' => variable_get('campaignmonitor_from_email', ''),
  );
  
  $form['settings']['campaignmonitor_reply_email'] = array(
    '#type' => 'textfield',
	'#title' => t('Emailadres "Reply To"'),
	'#default_value' => variable_get('campaignmonitor_reply_email', ''),
  );
  
  $form['settings']['campaignmonitor_test_email'] = array(
    '#type' => 'textfield',
	'#title' => t('Test emailadres'),
	'#default_value' => variable_get('campaignmonitor_test_email', ''),
  );
  
  
  $form['submit'] = array(
    '#type' => 'submit',
	'#value' => 'Save',
  );
  
  return $form;
}

/**
 * Submit function for settings form
 */
function hc_subscribe_settings_submit($form, &$form_state) {
  $api_key                = $form_state['values']['api_key'];
  $api_client_id          = $form_state['values']['api_client_id'];
  $api_subscriber_list_id = $form_state['values']['api_subscriber_list_id'];
  
  $from_name              = $form_state['values']['campaignmonitor_from_name'];
  $from_email             = $form_state['values']['campaignmonitor_from_email'];
  $reply_email            = $form_state['values']['campaignmonitor_reply_email'];
  $test_email             = $form_state['values']['campaignmonitor_test_email'];
  
  variable_set('campaignmonitor_api_key', $api_key);
  variable_set('campaignmonitor_api_client_id', $api_client_id);
  variable_set('campaignmonitor_api_subscriber_list_id', $api_subscriber_list_id);
  
  variable_set('campaignmonitor_from_name', $from_name);
  variable_set('campaignmonitor_from_email', $from_email);
  variable_set('campaignmonitor_reply_email', $reply_email);
  variable_set('campaignmonitor_test_email', $test_email);
  
  drupal_set_message(t('Settings saved'));
}

/**
 * Validation function for settings form
 */
function hc_subscribe_settings_validate($form, &$form_state) {
  $from_email  = $form_state['values']['campaignmonitor_from_email'];
  $reply_email = $form_state['values']['campaignmonitor_reply_email'];
  $test_email  = $form_state['values']['campaignmonitor_test_email'];
  
  if (!valid_email_address($from_email)) {
	form_set_error('', t('Please enter a valid email address for "From Email".'));  
  }
  if (!valid_email_address($reply_email)) {
	form_set_error('', t('Please enter a valid email address for "Reply Email".'));  	  
  }
  if (!valid_email_address($test_email)) {
	form_set_error('', t('Please enter a valid email address for "Test Email".'));  	  	  
  }
}