<?php

/**
 * @file
 * This module provides the "Book a course" rows view
 * see http://grayside.org/2010/09/how-override-views-field-template-module for details concerning hook_theme and theme functions
 */

/**
 * Implements hook_views_api
 */
function hc_book_calendar_views_api() {
  return array(
    'api' => 3,
  );
}


function hc_book_calendar_theme($existing, $type, $theme, $path) {
  return array(

		// main catalog pages
    'views_view_field__book_a_course__page__nothing' => array( 
        'arguments' => array('view' => FALSE, 'field' => FALSE, 'row' => FALSE),
        'original hook' => 'views_view_field',
    ),

    'views_view_field__courses_per_subject__block_2__nothing' => array( 
        'arguments' => array('view' => FALSE, 'field' => FALSE, 'row' => FALSE),
        'original hook' => 'views_view_field',
    ),

  );
}



/**
 * Theme function for formatting product 
 */
function theme_views_view_field__book_a_course__page__nothing(&$vars) {



  $subject_term_tid = $vars['row']->tid;
  
  if (!$subject_term_tid) {
    return;
  }

  // get all courses associated with this subject
  
  // first, get all subject divisions for the given subject, if any
  $result = db_query("SELECT DISTINCT tid FROM {taxonomy_term_data} t, {field_data_field_subject} s, {field_data_field_global_order} o
    WHERE t.tid = s.entity_id 
    AND s.field_subject_tid=:subject_tid
    AND o.bundle='subject_divisions'
    AND t.tid = o.entity_id
    ORDER BY o.field_global_order_value ASC",
    array(':subject_tid' => $subject_term_tid));


  foreach ($result as $row) {
    $subject_division_wrapper = entity_metadata_wrapper('taxonomy_term', $row->tid);
    
    // do the region check here
    $region_field = $subject_division_wrapper->field_global_region->value();
    $current_location = $_SESSION['user_location']['continent_code'];
    if (in_array($current_location, $region_field)) {
      $subject_divisions[] = $row->tid;    
    }
  }  

  $items_course_nids = array();

  // this subject has subdivisions, so iterate over these subdivisions and get nids in the right order
  if (count($subject_divisions)) {
    foreach($subject_divisions as $division_tid) {
      $result = db_query("SELECT DISTINCT nid FROM {node} n, {field_data_field_course_training_division} d, {field_data_field_global_order} o
        WHERE n.type = 'course'
        AND n.nid = d.entity_id
        AND d.field_course_training_division_tid=:division_tid
        AND n.nid = o.entity_id
        ORDER BY o.field_global_order_value ASC;",
        array(':division_tid' => $division_tid));
      foreach ($result as $row) {
        $nid = $row->nid;
        
        // do additional region check here
        $course_wrapper = entity_metadata_wrapper('node', $nid);
        $course_region = $course_wrapper->field_global_region->value();
        $current_location = $_SESSION['user_location']['continent_code'];
        if (in_array($current_location, $course_region)) {
          $items_course_nids[] = $row->nid;
        }
        
        
        
      }
    }
  } else {
  
    // TODO
    $result = db_query("SELECT DISTINCT nid FROM {node} n, {field_data_field_course_catalog_subject} s, {field_data_field_global_order} o
      WHERE n.type = 'course'
      AND n.nid = s.entity_id
      AND s.field_course_catalog_subject_tid=:subject_tid
      AND n.nid = o.entity_id
      ORDER BY o.field_global_order_value ASC;",
      array(':subject_tid' => $subject_term_tid));
      
    foreach ($result as $row) {
      $nid = $row->nid;
      
      // do additional region check here
      $course_wrapper = entity_metadata_wrapper('node', $nid);
      $course_region = $course_wrapper->field_global_region->value();
      $current_location = $_SESSION['user_location']['continent_code'];
      if (in_array($current_location, $course_region)) {
        $items_course_nids[] = $row->nid;
      }
      
    }
  }
  
  // store current path in variable to use as a redirect in the form
  $current_path = current_path();
  
  if (count($items_course_nids)) {
  
    $rows = array();
    

    for ($i = 0; $i < count($items_course_nids); $i++) {
    
      // parse extra classes for the table
      $extra_class = "";
      if ($i == 0) {
        $extra_class = "first";
      }
      if ($i == (count($items_course_nids) - 1)) {
        $extra_class = "last";
      }
    
      // get info from this course
      $nid = $items_course_nids[$i];
    
      $course_wrapper = entity_metadata_wrapper('node', $nid);
      
      // first, the title
      $course_title = $course_wrapper->title->value();
      $course_link = l($course_title, 'node/' . $nid);
      
      // second, the dates for this course
      $variations_field = $course_wrapper->field_course_public_courses->value();
      $output_variations = "";
      $output_prices = "";
      $output_booking_links = "";
      if (is_array($variations_field) && count($variations_field)) {
        $items = array();
        $items_price = array();
        $items_booking = array();
        foreach ($variations_field as $key => $variation) {
          $highlight_class = "";
		      $variation_wrapper = entity_metadata_wrapper('commerce_product', $variation);
		      $status = $variation_wrapper->status->value();
		      if ($status == 1) {
			      $variation_id = $variation_wrapper->product_id->value();
	          if (_hc_regions_check_product_variation($variation_id)) {
				      $variation_product_id = $variation_wrapper->product_id->value();
              $variation_price = $variation_wrapper->commerce_price->value();
/*
              if ($variation_product_id == 39) {
                print_r($variation_wrapper->commerce_price->value());
                exit();
              }
*/

              // check for reduced price here
              $default_price = 0;
              $highlight_class = "";
              $user_location = $_SESSION['user_location'];
              $continent_code = $user_location['continent_code'];
              $highlight_class = "";

              switch ($continent_code) {
                case 'EU':
                  $result = db_query("SELECT d.field_course_header_block_pr_eu_value FROM field_data_field_course_header a, field_data_field_course_header_blocks b, field_data_field_course_header_block_type c, 
                    field_data_field_course_header_block_pr_eu d 
                   WHERE a.entity_id =:course_nid and a.field_course_header_revision_id = b.entity_id 
                   AND b.field_course_header_blocks_revision_id = c.entity_id 
                   AND b.field_course_header_blocks_revision_id = d.entity_id
                   AND c.field_course_header_block_type_value = 'price';", array(':course_nid' => $nid));

                   foreach ($result as $row) {
                     $default_price = $row->field_course_header_block_pr_eu_value;
                   }
                  break;
                case 'NA':
                  $result = db_query("SELECT d.field_course_header_block_pr_usa_value FROM field_data_field_course_header a, field_data_field_course_header_blocks b, field_data_field_course_header_block_type c, 
                    field_data_field_course_header_block_pr_usa d 
                   WHERE a.entity_id =:course_nid and a.field_course_header_revision_id = b.entity_id 
                   AND b.field_course_header_blocks_revision_id = c.entity_id 
                   AND b.field_course_header_blocks_revision_id = d.entity_id
                   AND c.field_course_header_block_type_value = 'price';", array(':course_nid' => $nid));

                   foreach ($result as $row) {
                     $default_price = $row->field_course_header_block_pr_usa_value;
                   }
                  break;
                case 'AS':
                  $result = db_query("SELECT d.field_course_header_block_pr_as_value FROM field_data_field_course_header a, field_data_field_course_header_blocks b, field_data_field_course_header_block_type c, 
                    field_data_field_course_header_block_pr_as d 
                   WHERE a.entity_id =:course_nid and a.field_course_header_revision_id = b.entity_id 
                   AND b.field_course_header_blocks_revision_id = c.entity_id 
                   AND b.field_course_header_blocks_revision_id = d.entity_id
                   AND c.field_course_header_block_type_value = 'price';", array(':course_nid' => $nid));

                   foreach ($result as $row) {
                     $default_price = $row->field_course_header_block_pr_as_value;
                   }
                  break;


                  
              }

		          // price
		          $path = drupal_get_path('module', 'commerce_extra_price_formatters');
              require_once($path . "/includes/extra_functions.inc");

              // check if variation price differs from default price
              $variation_price_int = intval($variation_price['amount']);
              $variation_price_corrected = $variation_price_int / 100;
 
              if (($default_price > 0) && ($default_price != $variation_price_corrected)) {
                $highlight_class = "highlighted";
              }
				      
				      $variation_price_formatted = commerce_extra_price_no_decimal_currency_format($variation_price['amount'], $variation_price['currency_code']);
				      if ($highlight_class == "highlighted") {
  				      $variation_price_output = "<div class='price'><div class='xtra-small'>Discount!</div>" . $variation_price_formatted . "</div>";				      
				      } else {
  				      $variation_price_output = "<div class='price'>" . $variation_price_formatted . "</div>";				      				      
				      }
				      $items_price[] = array('data' => $variation_price_output, 'class' => array($highlight_class));

              // location
				      $variation_location = $variation_wrapper->field_public_course_location->value();
				      $variation_date = $variation_wrapper->field_public_course_date_format->value();      
				      $output_variation = "<div class='location'>" . $variation_location . "</div><div class='date'>" . $variation_date . "</div>";
		          $items[] = array('data' => $output_variation, 'class' => array('clearfix', $highlight_class));
		          
		          
		          
		          // booking links
    		      $variation_link = "<a rel='resizable:false;position:[center,60]' class='simple-dialog' name='block-system-main' href='/book-this-course?nid=" . $nid . "&pid=" . $variation_product_id . "'><i class='icon-ok'></i>&nbsp;" . t('Book It') . "</a>";
			        $items_booking[] = array('data' => $variation_link, 'class' => array($highlight_class));
		          		          
		        } else {
		          unset($variations_field[$key]);
		        }
		      } else {
		        unset($variations_field[$key]);
		      }
        }
        
          // add an "onsite link"
          $output_variation = "<div class='location'>" . t('Onsite') . "</div><div class='date'>" . t('Choose Your Own') . "</div>";
          $items[] = array('data' => $output_variation, 'class' => array('clearfix'));
          $output_variations = theme('item_list', array('items' => $items));

          // prices
          $items_price[] = array('data' => "<div class='price'>TBD</div>");
          $output_prices = theme('item_list', array('items' => $items_price));

          // booking links
	        $variation_link = "<a rel='resizable:false;position:[center,60]' class='simple-dialog' name='block-system-main' href='/book-this-course?nid=" . $nid . "'><i class='icon-ok'></i>&nbsp;" . t('Book It') . "</a>";
          
          $items_booking[] = array('data' => $variation_link);
       
          $output_booking_links = theme('item_list', array('items' => $items_booking));
      } else {
      
        // no public dates found -> just add the "Choose Your Own" date and "TBD" price
        $items = array();
        $output_variation = "<div class='location'>" . t('Onsite') . "</div><div class='date'>" . t('Choose Your Own') . "</div>";
        $items[] = array('data' => $output_variation, 'class' => array('clearfix'));
        
        $output_variations = theme('item_list', array('items' => $items));

        $output_prices = "<div class='price'>" . t('TBD') . "</div>"; 

        $variation_link = "<a rel='resizable:false;position:[center,60]' class='simple-dialog' name='block-system-main' href='/book-this-course?nid=" . $nid . "'><i class='icon-ok'></i>&nbsp;" . t('Book It') . "</a>";
        
        $items_booking = array('data' => $variation_link);
        
        $output_booking_links = theme('item_list', array('items' => $items_booking));

      }
      
    
      // add a header to the table
	    $header = array(
	      array('data' => t('Course'), 'class' => 'left',),
	      array('data' => t('Upcoming Dates'), 'class' => 'center'),
	      array('data' => t('Price'), 'class' => 'right1'),
	      array('data' => t('Book'), 'class' => 'right2'),	      
	    );
      
      // finally, parse the whole table
      $rows[] = array(
        'data' => array(
          array('data' => "<div class='course-title'>$course_link</div>", 'class' => 'left'),
          array('data' => "<div class='variations'>$output_variations</div>", 'class' => 'center'),
          array('data' => "<div class='price'>$output_prices</div>", 'class' => 'right1'),
          array('data' => "<div class='booking-links'>$output_booking_links</div>",'class' => 'right2'),
        ),
        'class' => array($extra_class),
      );
      
    }
    
    $output_main = theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('class' => array('main')), 'sticky' => FALSE));




  }
    $output_to_top = "<a class='to-top to-top-book' href='#'>Top&nbsp;<i class='icon-arrow-up'></i></a>";
/*     $output_complete = $output_header . $output_main . $output_to_top; */
    $output_complete = $output_main . $output_to_top;
    return $output_complete;    


}


function theme_views_view_field__courses_per_subject__block_2__nothing_deprecated(&$vars) {
  $output = "";
  $course_nid = $vars['row']->nid;
  
  // get all "variations" belonging to this course
  $course_wrapper = entity_metadata_wrapper('node', $course_nid);
  
  $output .= "<table>"
    . "<tr>"
    . "<td class='left'>Title course here</td>"
    . "<td class='center'>List of dates here</td>"
    . "<td class='right'>List of book links here</td>"
    . "</tr>"
    . "</table>";
  
  return $output;
  
/*
  $variations_field = $course_wrapper->field_course_public_courses->value();

  if (is_array($variations_field) && count($variations_field)) {
    $output_variations = array();
    $variation_list = array();
    foreach ($variations_field as $variation) {
      $variation_wrapper = entity_metadata_wrapper('commerce_product', $variation);
      $variation_product_id = $variation_wrapper->product_id->value();
      $variation_location = $variation_wrapper->field_public_course_location->value();
      $variation_date = $variation_wrapper->field_public_course_date_format->value();      

      $variation_date = $variation_wrapper->field_public_course_date->value();
      $variation_date_start = date('m.d.Y', $variation_date['value']);
      if (isset($variation_date['value2'])) {
        $variation_date_end = date('m.d.Y', $variation_date['value2']);
      }
      
      if (isset($variation_date_end)) {
        $output_variation_date = $variation_date_start . " to " . $variation_date_end;
      } else {
        $output_variation_date = $variation_date_start;
      }

      
      $output_variation = "<div class='col1'><span class='location'>" . $variation_location . "</span>"
        . "<span class='date'>" . $variation_date . "</span></div>"
        . "<div class='col2'><div class='book'><a href='/book-course?pid=" . $variation_product_id . "'><i class='icon-ok'></i>&nbsp;" . t('Book It') . "</a></div></div>";
      
      $variation_list[] = array('data' => $output_variation, 'class' => array('clearfix'));
      
    }

  } else {
    $user_location = $_SESSION['user_location'];    
		if (isset($user_location['continent_code']) && $user_location['continent_code'] == 'EU') {
		  $output_no_dates = "<div class='no-dates'>" . t('No public Dates') . "</div>";
		  $variation_list[] = array('data' => $output_no_dates);
    }
  }

  // add the "Onsite" row for USA
  $user_location = $_SESSION['user_location'];
  if (isset($user_location['continent_code']) && $user_location['continent_code'] == 'NA') {
    $output_onsite = "<div class='col1'><span class='location'>" . t('Onsite') . "</span>"
      . "<span class='date'>" . t('Choose Your Own') . "</span></div>"
      . "<div class='col2'><div class='book'><a href='/book-course?onsite=TRUE&course_nid=" . $course_nid . "'><i class='icon-ok'></i>&nbsp;" . t('Book It') . "</a></div></div>";
    
    $variation_list[] = array('data' => $output_onsite, 'class' => array('clearfix', 'onsite'));
  }
*/

  
  $output_variations = theme('item_list', array('items' => $variation_list));
  $output .= $output_variations;

/*
   else {
    $output .= "<div class='no-dates'>" . t('No public Dates') . "</div>";
  }
*/

  return $output;
}


/********************************************************************************************
 DEPRECATED
*******************************************************************************************/

/**
 * Implements hook_menu
 
function hc_book_calendar_menu() {
  $items = array();
  
  $items['book-a-course-old'] = array(
    'title' => '',
    'page callback' => '_hc_book_calendar_page',
    'access arguments' => array('access content'),
  );
  
  return $items;
}


/**
 * Callback function for rendering page
 
function _hc_book_calendar_page() {

  // get current region
  $user_location = $_SESSION['user_location'];

  // get all taxonomy terms (subjects) for catalog vocabulary
  $terms = taxonomy_get_tree(3);
  
  // region check for all subjects and store subjects (taxonomy term ids) in array()
  $subjects = array();
  foreach ($terms as $term) {
    $subject = entity_metadata_wrapper('taxonomy_term', $term->tid);
    $region_field = $subject->field_global_region->value();
    if (is_array($region_field)) {
      foreach ($region_field as $region) {
        if ($region == $user_location['continent_code']) {
          $subjects[] = $term->tid;
        }
      }
    }
  }
  
  foreach ($subjects as $subject) {
    $subject_wrapper = entity_metadata_wrapper('taxonomy_term', $subject);
    $subject_name = $subject_wrapper->name->value();
    $subject_description = $subject_wrapper->description->value();
    
    // intro output
    $output .= "<div class='subject'>"
      . "<div class='intro'><h3>" . $subject_name . "</h3><div class='description'>" . $subject_description . "</div>"
      . "</div>";
      
      
    // get list of courses belonging to this subject, with the right region
/*
    $result = db_query("SELECT * FROM {node} n, {field_data_field_global_region} r 
      WHERE n.type='course'
      AND n.nid =
    ;");

    $result = db_query("SELECT * FROM {node} n, {field_data_field_global_region} r, {field_data_field_course_catalog_subject} c 
      WHERE n.nid = r.entity_id 
      AND n.type = 'course' 
      AND r.field_global_region_value=:region
      AND c.entity_id = n.nid
      AND c.field_course_catalog_subject_tid=:subject;", 
      array(':region' => $user_location['continent_code'], ':subject' => $subject));
    foreach ($result as $row) {
      $node = node_load($row->nid);
      $output .= $node->title . " - " . $node->nid . "<br />";
    }
  }

  
  return $output;
}
*/

